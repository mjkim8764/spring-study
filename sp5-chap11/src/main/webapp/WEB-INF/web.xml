<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">



    <!-- DispatcherServlet 에 의해 생성된 Bean 은 ContextLoaderListener 에 의해 생생된 Bean 을 참조할 수 있다. -->
    <!-- Listener 등록 -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>


    <!-- contextLoader 가 해당 위치의 설정 파일을 읽어, 해당 파일을 dispatcher servlet 으로 만든다. -->
    <!-- Servlet Context 등록 -->
    <servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>


        <!--
            contextClass 는 Listener 에서 생성할 Context 를 어떤 클래스로 할 것이냐를 말하는 것이다.
            Default 로 XmlWebApplicationContext 가 설정되어 있기 때문에 XML 방식은 따로 설정을 적어주지 않지만

            JAVA Class 방식은 각종 어노테이션이 적용된 클래스가 사용되므로
            AnnotationConfigWebApplicationContext 로 변경하는 것이다.
        -->

        <init-param>
            <param-name>contextClass</param-name>
            <param-value>org.springframework.web.context.support.AnnotationConfigWebApplicationContext</param-value>
        </init-param>

        <!-- Bean 등록 -->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>
                config.MemberConfig
                config.MvcConfig
                config.ControllerConfig
            </param-value>
        </init-param>

        <load-on-startup>1</load-on-startup>
    </servlet>


    <!-- / 로 시작하는 url 요청을 받아 dispatcher 에서 처리한다. -->
    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>


    <!-- 인코딩을 UTF-8로 설정하여 필터링하겠다는 설정 -->
    <!-- 인코딩 필터는 기본적인 것이고, 여기서 스프링 시큐리티를 사용한다면 시큐리티 필터도 적용시켜야 할 것이다. -->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>
            org.springframework.web.filter.CharacterEncodingFilter
        </filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>

    <!-- /의 형식으로 시작하는 url 에 대하여 UTF-8로 인코딩 -->
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

</web-app>